@*@model FinancialPortal.ViewModels.BankAccountViewModel*@


@using Microsoft.AspNet.Identity;
@using FinancialPortal.Extensions
@using FinancialPortal.Helpers;

<style>
    #container {
        height: 400px;
    }

    .highcharts-figure, .highcharts-data-table table {
        min-width: 310px;
        max-width: 800px;
        margin: 1em auto;
    }

    .highcharts-data-table table {
        font-family: Verdana, sans-serif;
        border-collapse: collapse;
        border: 1px solid #EBEBEB;
        margin: 10px auto;
        text-align: center;
        width: 100%;
        max-width: 500px;
    }

    .highcharts-data-table caption {
        padding: 1em 0;
        font-size: 1.2em;
        color: #555;
    }

    .highcharts-data-table th {
        font-weight: 600;
        padding: 0.5em;
    }

    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {
        padding: 0.5em;
    }

    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {
        background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
        background: #f1f7ff;
    }
</style>

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/highcharts-3d.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>

<script>
    Highcharts.chart('container', {
        chart: {
            type: 'pie',
            options3d: {
                enabled: true,
                alpha: 45
            }
        },
        title: {
            text: 'Contents of Highsoft\'s weekly fruit delivery'
        },
        subtitle: {
            text: '3D donut in Highcharts'
        },
        plotOptions: {
            pie: {
                innerSize: 100,
                depth: 45
            }
        },
        series: [{
            name: 'Delivered amount',
            data: [
                ['Bananas', 8],
                ['Kiwi', 3],
                ['Mixed nuts', 1],
                ['Oranges', 6],
                ['Apples', 8],
                ['Pears', 4],
                ['Clementines', 4],
                ['Reddish (bag)', 1],
                ['Grapes (bunch)', 1]
            ]
        }]
    });
</script>

<figure class="highcharts-figure">
    <div id="container"></div>
    <p class="highcharts-description">
        A variation of a 3D pie chart with an inner radius added.
        These charts are often referred to as donut charts.
    </p>
</figure>


<h1 class="m-0 text-dark" style="
    font-size: 400%;
    text-align: center;
    color: #2f3e46">
    <b>Overview for @User.Identity.GetFullName()</b>
</h1>
<br />
<div class="row">
    <div class="col-lg-3 col-3">
        <div class="small-box elevation-2" style="
        background-color: #84a98c;
        color: white">
            <div class="inner" style="text-align:center">
                <dl>
                    <dt>
                        <b>Total Balance</b>
                    </dt>
                    <dd>
                        @*@Html.DisplayFor(model => model.BankAccount.TotalBalance)*@
                    </dd>
                </dl>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-3">
        <div class="small-box elevation-2" style="
        background-color: #84a98c;
        color: white">
            <div class="inner" style="text-align:center">
                <dl>
                    <dt>
                        <b>Total Budget</b>
                    </dt>
                    <dd>
                        @*@Html.DisplayFor(model => model.BankAccount.TotalBudget)*@
                    </dd>
                </dl>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-3">
        <div class="small-box elevation-2" style="
        background-color: #84a98c;
        color: white">
            <div class="inner" style="text-align:center">
                <dl>
                    <dt>
                        <b>Monthly Spending</b>
                    </dt>
                    <dd>
                        @*@Html.DisplayFor(model => model.BankAccount.TotalMonthlySpending)*@
                    </dd>
                </dl>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-3">
        <div class="small-box elevation-2" style="
        background-color: #84a98c;
        color: white">
            <div class="inner" style="text-align:center">
                <dl>
                    <dt>
                        <b>Monthly Deposits</b>
                    </dt>
                    <dd>
                        @*@Html.DisplayFor(model => model.BankAccount.TotalMonhtlyDeposits)*@
                    </dd>
                </dl>
            </div>
        </div>
    </div>
</div>

@*<div class="row mb-2">
        <div class="col-sm-6">
            <h1 class="m-0 text-dark">Dashboard</h1>
        </div> /.col
        <div class="col-sm-6">
            <ol class="breadcrumb float-sm-right">
                <li class="breadcrumb-item"><a href="#">Home</a></li>
                <li class="breadcrumb-item active">Dashboard v1</li>
            </ol>
        </div> /.col
    </div> /.row
    </div><!-- /.container-fluid -->
</div>*@



@*@model IEnumerable<FinancialPortal.Models.Household>

    @{
        ViewBag.Title = "Index";
    }

    <h2>Households</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.HouseholdName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Greeting)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Created)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsDeleted)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.HouseholdName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Greeting)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsDeleted)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>*@
